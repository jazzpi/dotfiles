# 256 colors
set -g default-terminal "screen-256color"

# True color in st
set-option -ga terminal-overrides ",st-256color:Tc"

# C-b is page up in vim, C-a is go to start of line
set -g prefix C-x
bind-key -T prefix C-x send-prefix
# No delay to enable normal mode in vim
set -s escape-time 0
# Ctrl+arrow keys should move a word
set-window-option -g xterm-keys on

# default window title colors
set-window-option -g window-status-fg colour24
set-window-option -g window-status-bg default

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default

# pane border
set-option -g pane-border-fg colour241 # grey
set-option -g pane-active-border-fg colour231 # white

# status line messages
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour green #green


# status line
set-window-option -g status-bg colour235
set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=green]#H#[default]'
set -g status-right '#[fg=white,bg=default]%a %H:%M:%S %p#[default] #[fg=colour247]%Y-%m-%d'

# Start numbering at 1
set -g base-index 1

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# status bar
# set-option -g status-utf8 on
set-option -g status-position top

# open new windows/splits in the current working directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -hc "#{pane_current_path}"

# enable mouse mode
set -g mouse on
bind m set -g mouse
