# i3 config file (v4)

# Restore default screen configuration before doing anything else
exec --no-startup-id ~/.config/i3/scripts/randr.bash restore default

# Background image
set_from_resource $bg i3wm.background_image /dev/null
exec --no-startup-id display -window root $bg

# Use super as modkey
set $mod Mod4

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
set_from_resource $font i3wm.font "pango:monospace 8"
font $font

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

bindsym $mod+d exec --no-startup-id ~/.config/i3/scripts/launcher.bash

# change focus
# vim-like
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# arrow keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
# vim-like
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
# arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation (g because h is used by the vim-like bindings)
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent
# focus the child container
bindsym $mod+c focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
set $ws4 "4:"
set $ws5 "5:"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# move focused workspace to screen
bindsym $mod+Control+Left move workspace to output left
bindsym $mod+Control+Right move workspace to output right
bindsym $mod+Control+Down move workspace to output down
bindsym $mod+Control+Up move workspace to output up

# move focused container to other screen
bindsym $mod+o move container to output right

# make current window a scratchpad
bindsym $mod+n move scratchpad
# show first scratchpad window
bindsym $mod+Control+n scratchpad show
# restore first scratchpad window
bindsym $mod+Shift+n scratchpad show; floating toggle

# Rename current workspace
bindsym $mod+Control+r exec i3-input -F 'rename workspace to "%s"' -P 'New name: '

# go back to previous workspace by switching to current workspace again
workspace_auto_back_and_forth yes

# Default workspaces for applications
assign [class="^Emacs$"] number $ws2
assign [class="^Eclipse$"] number $ws2
assign [class="^jetbrains"] number $ws2
assign [class="^Thunderbird$"] number $ws4
# Some applications only set the class later, these don't work with `assign`
for_window [class="chromium-browser"] move --no-auto-back-and-forth to workspace $ws1
for_window [class="^Spotify$"] move --no-auto-back-and-forth to workspace $ws5

# The launcher script assigns a custom class to the fzf terminal
for_window [class="^fzf$"] floating enable, border none, move position center

# Start some applications on startup
exec thunderbird
exec emacs --daemon
exec --no-startup-id nm-applet
exec --no-startup-id ibus-daemon
# If we start spotify straightaway, it hangs (because DBus isn't started?)
exec --no-startup-id bash -c 'sleep 1 && spotify > ~/.spot-log 2> ~/.spot-err'
# `chromium` is called `chromium-browser` on Ubuntu
exec bash -c 'chromium || chromium-browser'
# Start a terminal on WS 3
exec --no-startup-id i3-msg "workspace $ws3; exec i3-sensible-terminal; workspace $ws1"

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

bindsym $mod+m exec i3-input -F 'mark "%s"' -P 'Mark as: ' -l1
bindsym $mod+grave exec ~/.config/i3/scripts/mark-goto.bash

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl -- set-sink-volume @DEFAULT_SINK@ +5% && killall -s USR1 py3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl -- set-sink-volume @DEFAULT_SINK@ -5% && killall -s USR1 py3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && killall -s USR1 py3status
bindsym XF86AudioMicMute exec --no-startup-id pactl -- set-source-mute @DEFAULT_SOURCE@ toggle && killall -s USR1 py3status

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 10 && killall -s USR1 py3status
bindsym XF86MonBrightnessDown exec xbacklight -dec 10 && killall -s USR1 py3status

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

set $mode_spotify Spotify: [ ]Play/Pause, [hj]Previous, [kl]Next
set $spotify_send dbus-send --print-reply \
    --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 \
    org.mpris.MediaPlayer2.Player
bindsym $mod+Shift+s mode "$mode_spotify"
mode "$mode_spotify" {
    bindsym space exec $spotify_send.PlayPause
    bindsym h exec $spotify_send.Previous
    bindsym j exec $spotify_send.Previous
    bindsym k exec $spotify_send.Next
    bindsym l exec $spotify_send.Next
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mode+Shift+s mode "default"
}

set $mode_display Display configuration: [s]ave, [r]estore
bindsym $mod+Control+d mode "$mode_display"
mode "$mode_display" {
    bindsym s exec ~/.config/i3/scripts/randr-save.bash; mode "default"
    bindsym r exec ~/.config/i3/scripts/randr-restore.bash; mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+Control+d mode "default"
}

set $mode_theme Thme: [l]oad, [r]eload
bindsym $mod+Control+t mode "$mode_theme"
mode "$mode_theme" {
    bindsym l exec ~/.config/i3/scripts/theme.bash load; mode "default"
    bindsym r exec ~/.config/i3/scripts/theme.bash reload; mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+Control+t mode "default"
}

set $mode_system System: [S]hutdown, [R]estart, [e]xit, [l]ock, [s]uspend
bindsym $mod+x mode "$mode_system"
mode "$mode_system" {
    bindsym Shift+s exec poweroff
    bindsym Shift+r exec reboot
    bindsym e exit
    bindsym l exec ~/.config/i3/scripts/lock.bash; mode "default"
    bindsym s exec systemctl suspend; mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+x mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
set_from_resource $barbg i3wm.bar.background "#000000"
set_from_resource $barsl i3wm.bar.statusline "#ffffff"
set_from_resource $barsep i3wm.bar.separator "#666666"
set_from_resource $barfbg i3wm.bar.focused_background "#000000"
set_from_resource $barfsl i3wm.bar.focused_statusline "#ffffff"
set_from_resource $barfsep i3wm.bar.focused_separator "#666666"
set_from_resource $barfws i3wm.bar.focused_workspace "#4c7899" "#285577" "#ffffff"
set_from_resource $baraws i3wm.bar.active_workspace "#333333" "#5f676a" "#ffffff"
set_from_resource $bariws i3wm.bar.inactive_workspace "#333333" "#222222" "#888888"
set_from_resource $baruws i3wm.bar.urgent_workspace "#2f343a" "#900000" "#ffffff"
set_from_resource $barbm i3wm.bar.binding_mode "#2f343a" "#900000" "#ffffff"
bar {
    status_command py3status
    position top
    font pango:DejaVu Sans Mono, FontAwesome, github-octicons 8

    colors {
        background $barbg
        statusline $barsl
        separator $barsep
        focused_background $barfbg
        focused_statusline $barfsl
        focused_separator $barfsep

        focused_workspace $barfws
        active_workspace $baraws
        inactive_workspace $bariws
        urgent_workspace $baruws
        binding_mode $barbm
    }
}

# Window decoration colors
set_from_resource $clientfoc i3wm.client.focused          "#4c7899" "#285577" "#ffffff" "#2e9ef4" "#285577"
set_from_resource $clientfin i3wm.client.focused_inactive "#333333" "#5f676a" "#ffffff" "#484e50" "#5f676a"
set_from_resource $clientunf i3wm.client.unfocused        "#333333" "#222222" "#888888" "#292d2e" "#222222"
set_from_resource $clienturg i3wm.client.urgent           "#2f343a" "#900000" "#ffffff" "#900000" "#900000"
set_from_resource $clientplh i3wm.client.placeholder      "#000000" "#0c0c0c" "#ffffff" "#000000" "#0c0c0c"
set_from_resource $clientbg i3wm.client.background       "#ffffff"
client.focused          $clientfoc
client.focused_inactive $clientfin
client.unfocused        $clientunf
client.urgent           $clienturg
client.placeholder      $clientplh

client.background       $clientbg
