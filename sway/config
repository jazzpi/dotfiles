# sway config file

# include system-wide config files
include /etc/sway/config.d/*

# Import environment into systemd user session
exec sh -c 'systemctl --user import-environment; systemctl --user start sway-session.target'

# Use super as modkey
set $mod Mod4

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec gnome-terminal

# kill focused window
bindsym $mod+Shift+q kill

bindsym $mod+Mod1+d exec --no-startup-id dmenu_run
bindsym $mod+d exec albert toggle

# Albert Launcher
exec albert
# Lock screen when idle
exec ~/.config/sway/scripts/idle.sh

# Screenshots
bindsym Print exec grim -g "$(slurp)" - | swappy -f -
bindsym $mod+Shift+s exec grim -g "$(slurp)" - | swappy -f -
bindsym $mod+Control+s exec grim -g "$(~/.config/sway/scripts/pick-window.sh)" - | swappy -f -

# change focus
# vim-like
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# arrow keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
# vim-like
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
# arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation (g because h is used by the vim-like bindings)
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
bindsym $mod+Shift+f fullscreen toggle global

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# toggle sticky mode
bindsym $mod+p sticky toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent
# focus the child container
bindsym $mod+c focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
set $ws4 "4:"
set $ws5 "5:"
set $ws6 "6:"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# move focused workspace to screen
bindsym $mod+Control+Left move workspace to output left
bindsym $mod+Control+Right move workspace to output right
bindsym $mod+Control+Down move workspace to output down
bindsym $mod+Control+Up move workspace to output up

# move focused container to other screen
bindsym $mod+o move container to output right

# make current window a scratchpad
bindsym $mod+n move scratchpad
# show first scratchpad window
bindsym $mod+Control+n scratchpad show
# restore first scratchpad window
bindsym $mod+Shift+n scratchpad show; floating toggle

# go back to previous workspace by switching to current workspace again
workspace_auto_back_and_forth no

# Default workspaces for applications
assign [app_id="^firefox$"] number $ws1
assign [app_id="^emacs$"] number $ws2
assign [app_id="^code-url-handler$"] number $ws2
assign [class="^Eclipse$"] number $ws2
assign [class="^jetbrains"] number $ws2
assign [app_id="^thunderbird$"] number $ws4
assign [class="^Blender$"] number $ws6
assign [class="^rviz$"] number $ws6
# Some applications only set the class later, these don't work with `assign`
for_window [class="^chromium-browser$"] move --no-auto-back-and-forth to workspace $ws1
for_window [class="^Spotify$"] move --no-auto-back-and-forth to workspace $ws5
for_window [title="^Picture-in-Picture$"] border pixel 1

# Chromium inhibits sway shortcuts for PWAs by default
for_window [app_id="^chrome-.*-.*$"] shortcuts_inhibitor disable

# The launcher script assigns a custom class to the fzf terminal
for_window [class="^fzf$"] floating enable, border pixel, move position center

for_window [title="Picture-in-Picture"] sticky enable
for_window [title="Footprint Library Browser$"] floating enable
for_window [class="com.st.app.Main" title="Error"] floating enable
for_window [app_id="simulator.out"] floating enable

# Start GNOME stuff
exec --no-startup-id /usr/libexec/polkit-gnome-authentication-agent-1
exec --no-startup-id /usr/libexec/gnome-terminal-server
# Start some applications on startup
exec thunderbird
exec --no-startup-id nm-applet --indicator
exec --no-startup-id bash -c "~/.config/sway/scripts/spotify.bash"
exec firefox
# Start a terminal on WS 3
exec --no-startup-id sway-msg "workspace $ws3; exec gnome-terminal; workspace $ws1"

# reload the configuration file
bindsym $mod+Shift+c reload
# exit sway (logs you out)
bindsym $mod+Shift+e exec "swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway?' -B 'Yes, exit sway' 'sway-msg exit'"

bindsym $mod+m exec echo "" | rofi -dmenu -p "Mark as: " | xargs -r swaymsg mark
bindsym $mod+grave exec ~/.config/sway/scripts/mark-goto.bash

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl -- set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl -- set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl -- set-source-mute @DEFAULT_SOURCE@ toggle

# Media player controls
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec brightnessctl s +10%
bindsym XF86MonBrightnessDown exec brightnessctl -n1 s 10%-

# Notification controls
bindsym ctrl+space exec makoctl dismiss
bindsym ctrl+shift+space exec makoctl dismiss -a
bindsym ctrl+grave exec makoctl restore

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt
    bindsym Shift+h resize shrink width 1 px or 1 ppt
    bindsym Shift+j resize grow height 1 px or 1 ppt
    bindsym Shift+k resize shrink height 1 px or 1 ppt
    bindsym Shift+l resize grow width 1 px or 1 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt
    bindsym Shift+Left resize shrink width 1 px or 1 ppt
    bindsym Shift+Down resize grow height 1 px or 1 ppt
    bindsym Shift+Up resize shrink height 1 px or 1 ppt
    bindsym Shift+Right resize grow width 1 px or 1 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

set $mode_system System: [S]hutdown, [R]estart, [e]xit, [l]ock, [s]uspend
bindsym $mod+x mode "$mode_system"
mode "$mode_system" {
    bindsym Shift+s exec systemctl poweroff
    bindsym Shift+r exec systemctl reboot
    bindsym e exit
    bindsym l exec swaylock; mode "default"
    bindsym s exec systemctl suspend; mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+x mode "default"
}

bindsym $mod+r mode "resize"

bar {
    swaybar_command waybar
    position top
}

# Window decoration colors
#set_from_resource $clientfoc i3wm.client.focused          "#4c7899" "#285577" "#ffffff" "#2e9ef4" "#285577"
#set_from_resource $clientfin i3wm.client.focused_inactive "#333333" "#5f676a" "#ffffff" "#484e50" "#5f676a"
#set_from_resource $clientunf i3wm.client.unfocused        "#333333" "#222222" "#888888" "#292d2e" "#222222"
#set_from_resource $clienturg i3wm.client.urgent           "#2f343a" "#900000" "#ffffff" "#900000" "#900000"
#set_from_resource $clientplh i3wm.client.placeholder      "#000000" "#0c0c0c" "#ffffff" "#000000" "#0c0c0c"
#set_from_resource $clientbg i3wm.client.background       "#ffffff"
client.focused          "#2E4E64" "#1A3E5A" "#ffffff" "#155D97" "#1A3E5A"
client.focused_inactive "#575757" "#40464C" "#ffffff" "#707A7C" "#40464C"
client.unfocused        "#333333" "#222222" "#888888" "#292d2e" "#222222"
client.urgent           "#2f343a" "#900000" "#ffffff" "#900000" "#900000"
client.placeholder      "#000000" "#0c0c0c" "#ffffff" "#000000" "#0c0c0c"

client.background       "#ffffff"
#client.focused          $clientfoc
#client.focused_inactive $clientfin
#client.unfocused        $clientunf
#client.urgent           $clienturg
#client.placeholder      $clientplh
#
#client.background       $clientbg

# Input config
input type:touchpad {
    tap enabled
    natural_scroll enabled
    dwt enabled # disable while typing
}

input type:keyboard {
    xkb_layout "us,de"
    xkb_variant "altgr-intl,"
    xkb_options "grp:ctrls_toggle"
}

include ~/.config/sway/.local/config
